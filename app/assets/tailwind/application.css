/* Custom components */
@import '../stylesheets/custom/custom.css';

@import 'tailwindcss';
@plugin "@tailwindcss/typography";
@plugin "@tailwindcss/forms";
@plugin "@tailwindcss/aspect-ratio";

@custom-variant dark (&:where(.dark, .dark *));
@custom-variant hover (&:hover);

@theme {
  --font-sans: 'InterVariable', 'ui-sans-serif', 'system-ui', '-apple-system', 'BlinkMacSystemFont',
    '"Segoe UI"', 'Roboto', '"Helvetica Neue"', 'Arial', '"Noto Sans"', 'sans-serif',
    '"Apple Color Emoji"', '"Segoe UI Emoji"', '"Segoe UI Symbol"', '"Noto Color Emoji"';
  --text-xxs: 0.625rem;

  --animate-ping-slow: ping 2.5s cubic-bezier(0, 0, 0.2, 1) infinite;
  --animate-pulse-fast: pulse 2s cubic-bezier(0, 0, 0.2, 1) infinite;

  --color-yellow-550: oklch(73.8% 0.173 80.9405);
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-slate-200, currentcolor);
  }
}

@utility row-numbers {
  @apply relative;

  & tbody {
    counter-reset: rowNumber;
  }

  & tbody tr {
    counter-increment: rowNumber;
  }

  & tbody .row-number::before {
    content: counter(rowNumber);
  }
}

@utility row-number {
  .row-numbers tbody &::before {
    content: counter(rowNumber);
  }
}

@layer base {
  @font-face {
    font-family: 'InterVariable';
    src: url('../fonts/InterVariable.woff2') format('woff2');
    font-weight: 100 900;
    font-display: swap;
    font-style: normal;
  }

  @font-face {
    font-family: 'InterVariable';
    src: url('../fonts/InterVariable-Italic.woff2') format('woff2');
    font-weight: 100 900;
    font-display: swap;
    font-style: italic;
  }

  input[type='number']::-webkit-inner-spin-button,
  input[type='number']::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  * {
    scrollbar-width: thin;
    scrollbar-color: #9ca3af #d1d5db;
  }

  html.dark * {
    scrollbar-color: #6b7280 #1f2937;
  }

  /* Chrome, Edge, and Safari */
  *::-webkit-scrollbar {
    @apply w-2;
  }

  *::-webkit-scrollbar-track {
    @apply bg-gray-300 dark:bg-gray-800;
  }

  *::-webkit-scrollbar-thumb {
    @apply bg-gray-400 active:bg-gray-500 dark:bg-gray-500 dark:active:bg-gray-600;
  }

  /* Hide outline for Safari */
  @supports (hanging-punctuation: first) and (font: -apple-system-body) and
    (-webkit-appearance: none) {
    .no-outline-safari {
      outline: none !important;
    }
  }
}

/* Hide scrollbar for IE, Edge and Firefox */
@utility hide-scrollbar {
  -ms-overflow-style: none !important; /* IE and Edge */
  scrollbar-width: none !important; /* Firefox */

  &::-webkit-scrollbar {
    @apply hidden; /* Chrome, Safari and Opera */
  }
}
